import numpy as np
import ROOT as r
from array import array
import logging




def plot_arrays_from_params(paramsShield, is_sc=False, return_fig=False):
    dZ = paramsShield[0:8]
    dX_in = paramsShield[8::6]
    dX_out = paramsShield[9::6]
    dY_in = paramsShield[10::6]
    dY_out = paramsShield[11::6]
    gap_in = paramsShield[12::6]
    gap_out = paramsShield[13::6]

    yGaps = []
    xGaps=[]
    
    plot_z = []
    plot_x = []
    plot_y = []
    
    for i in range(2, 8):
        yGaps = yGaps + [-dY_in[i], dY_in[i], dY_out[i], -dY_out[i], -dY_in[i], None]
        xGaps = xGaps + [dX_in[i], dX_in[i]+gap_in[i], dX_out[i]+gap_out[i] , dX_out[i], dX_in[i], None]
        c_z = 0 if len(plot_z) == 0 else plot_z[-3]
        plot_z = plot_z + [c_z+10, c_z+10, c_z+10 + 2*dZ[i], c_z + 10 + 2*dZ[i], c_z + 10, None]
        if is_sc and i == 3:
            plot_x = plot_x + [-(4*dX_in[i]+gap_in[i]), (4*dX_in[i]+gap_in[i]), (4*dX_out[i]+gap_out[i]), -(4*dX_out[i]+gap_out[i]), -(4*dX_in[i]+gap_in[i]), None]
            plot_y = plot_y + [-(3*dX_in[i]+dY_in[i]), (3*dX_in[i]+dY_in[i]), (3*dX_out[i]+dY_out[i]), -(3*dX_out[i]+dY_out[i]), -(3*dX_in[i]+dY_in[i]), None]
        else:
            plot_x = plot_x + [-(2*dX_in[i]+gap_in[i]), (2*dX_in[i]+gap_in[i]), (2*dX_out[i]+gap_out[i]), -(2*dX_out[i]+gap_out[i]), -(2*dX_in[i]+gap_in[i]), None]
            plot_y = plot_y + [-(dX_in[i]+dY_in[i]), (dX_in[i]+dY_in[i]), (dX_out[i]+dY_out[i]), -(dX_out[i]+dY_out[i]), -(dX_in[i]+dY_in[i]), None]
    return([plot_x, plot_y, plot_z, xGaps, yGaps])
def plot_shield_from_verts_part(plot_verts, title, what_to_plot, fig, row, col):
    gap_color = 'rgba(168, 235, 203, 0.5)'
    up_color = 'rgba(255,99,71, 0.8)'
    down_color = 'rgba(135,206,250, 0.8)'
    x, y, z, gap_x, gap_y = plot_verts
    
    zMax = np.max([ik for ik in z if ik is not None])
    zMin = np.min([ik for ik in z if ik is not None])
    half_position = np.argwhere(np.invert([np.isscalar(xi) for xi in x])).flatten()[2]
#     print(half_position)
#     print(half_position)
    if what_to_plot==0:
        data = [
            go.Scatter(x=z[:half_position], y=x[:half_position], fill="toself", fillcolor=up_color, line_color=up_color, marker=dict(opacity=0), meta=dict(name="Up polarity"), showlegend = False),
            go.Scatter(x=z[half_position:], y=x[half_position:], fill="toself", fillcolor=down_color, line_color=down_color, marker=dict(opacity=0), meta=dict(name="Up polarity"), showlegend = False), 
            go.Scatter(x=z, y=gap_x, fill="toself", fillcolor=gap_color, line_color=gap_color, marker=dict(opacity=0), showlegend = False),
            go.Scatter(x=z, y=[-p if p else None for p in gap_x], fill="toself", fillcolor=gap_color, line_color=gap_color, marker=dict(opacity=0), showlegend = False)
               ]
        for lines in data:
            fig.add_trace(lines,
                row=row, col=col)
    
            # Update xaxis properties
        fig.update_xaxes(range=[zMin, zMax+50], row=row, col=col)
        # Update yaxis properties
        fig.update_yaxes(title_text='X [cm]', range=[-330, 330], row=row, col=col)

        
    else:
            data=[
            go.Scatter(x=z[:half_position], y=y[:half_position], fill="toself", fillcolor=up_color, line_color=up_color, marker=dict(opacity=0), meta=dict(name="Up polarity"), showlegend = False),
            go.Scatter(x=z[half_position:], y=y[half_position:], fill="toself", fillcolor=down_color, line_color=down_color, marker=dict(opacity=0), meta=dict(name="Up polarity"), showlegend = False), 
            go.Scatter(x=z, y=gap_y, fill="toself", fillcolor=gap_color, line_color=gap_color, marker=dict(opacity=0), showlegend = False)
               ]
            for lines in data:
                fig.add_trace(lines,
                row=row, col=col) 
            fig.update_xaxes(title_text='Z [cm]', range=[zMin, zMax+50], row=row, col=col)
            # Update yaxis properties
            fig.update_yaxes(title_text='Y [cm]', range=[-330, 330], row=row, col=col)


def convert_shield(combi):
    shield = {}

    shield["dZ"] = [combi[i] for i in range(8)]
    shield["dXIn"] = [combi[i] for i in range(8,len(combi), 6)]
    shield["dXOut"] = [combi[i+1] for i in range(8,len(combi), 6)]
    shield["dYIn"] = [combi[i+2] for i in range(8,len(combi), 6)]
    shield["dYOut"] = [combi[i+3] for i in range(8,len(combi), 6)]
    shield["gapIn"] = [combi[i+4] for i in range(8,len(combi), 6)]
    shield["gapOut"] = [combi[i+5] for i in range(8,len(combi), 6)]
    return shield

def generate_geo(geofile, params):
    f = r.TFile.Open(geofile, 'recreate')
    parray = r.TVectorD(len(params), array('d', params))
    parray.Write('params')
    f.Close()
    logging.info('Geofile constructed at ' + geofile)
    print(params)
    return geofile

def convert_shield_back(shield):
    output_params = shield["dZ"]
    for i in range(8):
        for key in list(shield.keys())[1:]:
            output_params += [shield[key][i]] 
    return output_params

def custom_shield(name, config):
    SC_cut = convert_shield(config)
    SC_cut["dXIn"][3] = 59.250000000000014 - 9.
    SC_cut["dYIn"][3] = 24.334789783051825 - 4.
    generate_geo(name, convert_shield_back(SC_cut))

if __name__ == "__main__":
    combi = [ 70. , 170. , 208. , 207. , 281. , 172.82, 212.54, 168.64,\
            40. , 40. , 150. , 150. , 2. , 2. ,\
    80. , 80. , 150. , 150. , 2. , 2. ,\
    72. , 51. , 29. , 46., 10. , 7. ,\
    54. , 38. , 104. , 120. , 14. , 9. ,\
    10. , 31. , 35. , 31. , 51. , 11. ,\
    3. , 32. , 54. , 24. , 8. , 8. ,\
    22. , 32. , 209. , 35. , 8. , 13. ,\
    33. , 77. , 85. , 241. , 9. , 26. ]

    combi_sc = convert_shield(combi)
    combi_sc["dZ"][2] = 0.
    combi_sc["dZ"][3] = 500.
    combi_sc["dZ"][4] = 50.
    combi_sc["dXIn"][3] = 50.
    combi_sc["dXOut"][3] = 25.
    combi_sc["dYIn"][3] = 10.
    combi_sc["dYOut"][3] = 5.
    combi_sc["gapIn"][3] = 10.
    combi_sc["gapOut"][3] = 5.

    #generate_geo("test_geo_SC_wide_long_gap_10m_pyram.root", convert_shield_back(combi_sc))
    config_03032023 = [70.0, 170.0, 0.0, 402.508797124642, 
                       50.0, 172.82, 212.54, 168.64, 40.0, 
                       40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 
                       80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 
                       51.0, 29.0, 46.0, 10.0, 7.0, 12.26145697171426, 
                       42.25000000000073, 76.39132383281388, 8.000000000000203, 18.6581908236667, 69.99999999999702, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 3.0, 32.0, 54.0, 24.0, 8.0, 8.0, 22.0, 32.0, 209.0, 35.0, 8.0, 13.0, 33.0, 77.0, 85.0, 241.0, 9.0, 26.0]

    config_04032023 = [70.0, 170.0, 0.0, 358.4735584780767, 50.0, 172.82, 212.54, 168.64, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 59.250000000000014, 7.81850649193742, 24.334789783051825, 11.56016586920779, 2.0, 2.0000000000000515, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 3.0, 32.0, 54.0, 24.0, 8.0, 8.0, 22.0, 32.0, 209.0, 35.0, 8.0, 13.0, 33.0, 77.0, 85.0, 241.0, 9.0, 26.0]
    
    config_26032023_v1 = [70.0, 170.0, 0.0, 400.0, 50.0, 99.99999999999999, 50.0, 400.0, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25, 49.25, 8.0, 8.0, 2.0000000000000018, 2.0, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 3.0000000000000036, 100.0, 8.000000000000002, 242.0, 2.0000000000000004, 2.0, 100.0, 3.0000000000000004, 148.85310386442896, 116.66033969704414, 2.0, 70.0, 3.000000000000003, 100.0, 242.0, 33.189092724733214, 2.0000000000000004, 2.0000000000000004] 
    config_26032023_v2 = [70.0, 170.0, 0.0, 399.99995655512845, 50.00001209414294, 400.0, 50.0, 50.00000000406352, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.2499979855104, 3.0000093787560633, 30.042214887838135, 189.99996193402268, 2.0000074953860576, 2.0000191763843485, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 3.0000199785984076, 99.9999999674312, 241.99997015759732, 241.99992017555118, 2.051267970516556, 2.000037815753714, 3.0000124085609765, 53.677256645617355, 8.000002173989312, 242.0, 70.0, 69.00469638181866, 100.0, 3.0000340395644534, 8.000000006028102, 242.0, 69.99986632536749, 2.0]
    config_04042023 = [70.0, 170.0, 0.0, 380.32999950826843, 139.7304212754163, 151.88106396192353, 156.78900409254547, 151.96406560244293, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 34.08536070935129, 13.45538351018268, 62.742556970399356, 131.63459276640253, 47.03093023333762, 68.55681374573383, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 42.815704304511186, 71.68233366734992, 63.573491706326614, 56.29861914394005, 16.812242229752606, 25.48827364130041, 89.53855803441196, 87.36579178912307, 155.36067338943744, 127.67799210191838, 27.02771643111672, 30.835275888162535, 57.90415428878885, 19.839801433701858, 193.52299687507735, 133.68264708908234, 9.342532186121915, 27.504638122227067]
    
    config_01052023_v1 = [70.0, 170.0, 0.0, 293.75240822835497, 109.86876363445913, 124.02381211776145, 106.18604398976362, 361.83956896553184, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 25.390788422327176, 42.43407356209186, 99.09285439847228, 10.703157345351894, 69.02551478037469, 28.470612489794444, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 26.947520922302218, 16.93415684050165, 106.33040565913777, 11.078982673504067, 44.54835412445349, 38.29891555784724, 42.74438987600707, 3.0, 226.78343551080542, 50.7257472665462, 15.719794616249143, 43.96968470747825, 69.8053321669697, 31.41044001206132, 180.868756128339, 68.96769758051022, 23.13022057165343, 5.870614251603162]
    config_01052023_v2 = [70.0, 170.0, 0.0, 294.7971752565405, 106.09665224749797, 135.14913938542026, 104.75882085496968, 359.1982122555715, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 25.464782379835164, 40.31466727570113, 67.70593102708244, 41.578817724936776, 66.08630019361603, 23.13842561037193, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 52.04689274711896, 36.884830061369726, 153.12061533354216, 15.49163979664132, 60.131011798036454, 36.326968656924784, 40.855873276986074, 4.180328482960265, 170.68503850012945, 53.80575441740372, 16.568884649139356, 43.92863847221538, 55.5697915122234, 14.606734690736893, 73.11216957736869, 69.71264543729916, 27.86238177403029, 5.387902577378965]
    
    config_01052023_v3 = [70.0, 170.0, 0.0, 295.1923871330227, 135.50674760983833, 272.1785295401145, 118.54960702100112, 50.00000000000002, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 18.083633745561443, 32.25, 80.36293225043826, 73.08638558107639, 19.238834891162814, 69.99999999999999, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 6.9941420382868005, 64.57291687414124, 205.5658824098786, 152.77361893185275, 2.000000000000005, 13.220168920356071, 27.59313044193199, 97.99812337236438, 126.57000343147138, 189.88548692631014, 28.03746882551997, 40.500430313625635, 44.242783198843945, 37.64220843972135, 134.20167010651483, 8.0, 27.174257534205722, 4.2673209741711] 

    config_01052023_v4 = [70.0, 170.0, 0.0, 318.25601467800567, 134.81573587928347, 50.00000000000789, 333.8341909933239, 119.1435055192753, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25000000002386, 32.19308331553445, 47.61870454812225, 61.018450986041685, 2.0000000000013713, 18.744212758010907, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 42.87117622991509, 3.0000000000189444, 192.52879978678428, 22.269954821425614, 55.478796093068524, 3.1726307793829798, 10.248378160322188, 78.19256950749246, 48.27640043376011, 86.29224511401583, 40.757659008025286, 2.0, 62.270618487122995, 39.67120592722319, 16.867914974222046, 178.9910555751793, 14.928961724222026, 21.520681481243972] 

    config_01052023_v5 = [70.0, 170.0, 0.0, 291.9029141785826, 69.20383517991397, 178.33991962182375, 232.9270079224315, 191.52178019937983, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 19.432917309016634, 26.218112835193537, 88.40356646992807, 109.109337775033, 50.85486968394393, 66.90039099120786, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 35.93066786693136, 23.979747999967906, 120.85344660693768, 11.350236418793953, 30.752851713481746, 46.28856756746384, 33.42277246335985, 60.86434959974381, 71.6168690681942, 154.36237292221472, 5.272643917058737, 54.85495465987014, 3.885226041970596, 34.616695880444404, 8.0, 241.99999999999977, 40.078623638091635, 6.938243833031115] 

    config_01052023_v6 = [70.0, 170.0, 0.0, 280.78325003337085, 111.97946595530047, 297.7332892066207, 50.0, 166.9862859298069, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 47.26212785085964, 38.90814657623314, 8.0, 57.03057754279905, 9.951488596561425, 18.129107735328837, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 37.388795772367565, 18.190974331632987, 8.0, 8.0, 47.574825393058006, 34.70401874545908, 64.56379570031245, 5.894041832841063, 93.52471848110446, 22.215686360898736, 40.839362189582204, 2.0, 100.0, 36.15577879482879, 149.98168054361722, 147.34992230459457, 30.580119797153195, 2.0000000000000004]

    config_01052023_v7 = [70.0, 170.0, 0.0, 301.04594515182373, 114.24612993353944, 316.4229241499739, 70.63125784972557, 197.65374291493734, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 47.83117014220534, 33.94043094204629, 44.5789212143259, 56.108113959280885, 4.7273246619566445, 31.266607375862847, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 35.42303167703847, 20.55106587056171, 237.4495437687334, 112.6577444816984, 55.42790960632505, 2.0, 80.13657945277308, 73.78174968426536, 242.0, 133.89842088333012, 25.96931467823619, 6.733964684760889, 29.372887227089308, 76.69194157790055, 136.0944033349219, 151.12862569296183, 2.0, 10.161621982767493]
    
    config_01052023_v8 = [70.0, 170.0, 0.0, 334.53426379710436, 78.70503831654787, 262.1442340314388, 147.82865149900317, 167.74599002674222, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 37.82356246281415, 8.436569749377668, 76.77737111411989, 125.10734487138689, 39.11375127732754, 7.497226074337959, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 16.31312150787562, 37.83686884120107, 109.95474260672927, 75.75156265683472, 51.972199864685535, 17.804004423320293, 55.36186332721263, 68.34538215212524, 67.83240821585059, 114.12763192877173, 28.355305541306734, 45.74678200483322, 44.71048472635448, 67.65039966162294, 96.87931537255645, 86.44382835552096, 53.8965392187]
    
    config_01052023_v9 = [70.0, 170.0, 0.0, 386.404260359267, 85.59538597877071, 233.09924491871251, 185.34793836918797, 109.5531703740618, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 37.23013604282697, 17.27270718621289, 55.68192790593684, 82.73850186900772, 47.59231384096285, 7.257141029152137, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 60.09980384553154, 10.335607844872534, 31.631807348270286, 88.58443404417424, 26.590671403850344, 36.60131452172045, 68.74419451519395, 100.0, 144.62548861379656, 157.0870015038788, 46.502392390426756, 33.789576246664765, 99.75423508069181, 99.47896733649699, 42.989619937837496, 139.1321684560586, 16.93619173757655, 34.735081631807184] 


    config_01052023_v10 = [70.0, 170.0, 0.0, 297.7308852173859, 94.9843946312082, 261.49183631070605, 295.7928838406999, 50.0, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 48.94866540540975, 34.830110397508875, 8.000000000000002, 8.0, 3.2053383783610014, 9.330631969956373, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 30.829811147433663, 28.85599510562335, 157.14416290873868, 40.46039105547838, 44.84361945972179, 16.74717178601618, 67.06055893015422, 49.8062381197123, 182.0369380920076, 66.3129069830319, 2.0, 70.0, 33.7954758002109, 17.741441488087446, 165.59582956647762, 198.27128761538003, 2.0, 42.45815140606403] 


    config_01052023_v11 = [70.0, 170.0, 0.0, 321.4108901407998, 104.84682926144367, 382.0079684736347, 72.80349464743479, 72.42960699096601, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 46.73282297399784, 33.59897172706898, 48.8345120767023, 73.94509639297132, 12.068708104008635, 4.750053202339846, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 19.992482607270926, 54.084043339360484, 133.9654134359484, 182.07244760079195, 19.260418193638934, 21.85938215652465, 58.33563401502162, 83.26304581638053, 223.8157604341176, 113.76172329309078, 14.434459570616097, 20.399135008916502, 66.06087318587555, 53.22946045457477, 166.70895388422176, 143.2428187330096, 3.039919664162912, 6.285385809997381] 



    config_05052023_v1 = [70.0, 170.0, 0.0, 400.0, 91.77547046423479, 171.03488552388507, 257.47854456504933, 79.71109944683076, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25, 22.972348625377954, 8.000000000000004, 8.0, 2.000000000000002, 33.732696394595834, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 56.22597227271004, 23.619813941483123, 193.2160388819135, 8.0, 39.433503354991174, 34.14355164384477, 99.99999999999999, 100.0, 8.0, 8.0, 12.672270901860395, 2.0000000000000075, 4.6850864086465105, 86.03147817140642, 106.49197136393349, 143.05019154777375, 2.0, 2.0]
    config_05052023_v2 = [70.0, 170.0, 0.0, 374.64047283767474, 150.0, 126.91976637415871, 204.35448144891274, 144.08527933925376, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25000000000002, 22.824122228388813, 51.24999999999997, 88.30128319583775, 2.0000000000000235, 29.85712101329059, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 90.94610009548109, 34.61389155214732, 8.0, 241.724183693889, 35.21180898760217, 3.1303802945232384, 100.0, 100.0, 8.000000000000492, 8.0, 2.0, 40.29617711424133, 100.0, 9.129154959949762, 93.78638500182171, 191.5627600247663, 2.0000000000002394, 55.429200274175074] 
    config_05052023_v3 = [70.0, 170.0, 0.0, 400.0, 91.77547046423479, 171.03488552388507, 257.47854456504933, 79.71109944683076, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25, 22.972348625377954, 8.000000000000004, 8.0, 2.000000000000002, 33.732696394595834, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 56.22597227271004, 23.619813941483123, 193.2160388819135, 8.0, 39.433503354991174, 34.14355164384477, 99.99999999999999, 100.0, 8.0, 8.0, 12.672270901860395, 2.0000000000000075, 4.6850864086465105, 86.03147817140642, 106.49197136393349, 143.05019154777375, 2.0, 2.0]
    config_05052023_v4 = [70.0, 170.0, 0.0, 400.0, 80.5061325590722, 167.919337439564, 296.2306495463836, 55.34388045485503, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.250000000484526, 22.729917662177062, 8.000000000008193, 8.0, 2.0, 31.876455961132294, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 55.346062051853224, 27.50817046893037, 107.40718653896553, 8.000000001550346, 30.398716210857252, 39.73812014592524, 100.0, 99.99999999998236, 8.0, 8.000000001582823, 12.073758243359217, 2.0, 3.0, 85.10646394137757, 61.775494046960596, 161.7968405332845, 2.021750807215878, 2.000000000213243] 
    config_05052023_v5 = [70.0, 170.0, 0.0, 312.4001924299533, 100.21901343176596, 163.0479723138181, 340.09687414111534, 84.235947683347, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 45.9258213512344, 46.156965866796384, 8.0, 60.529102399602664, 15.296714595062836, 2.0, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 11.325395720194727, 43.42589379200348, 8.0, 228.23806735133772, 2.0, 19.63900957309945, 3.000000000001115, 99.99999999999753, 242.0, 8.0, 2.00000000000156, 2.00000000000119, 84.25242205576016, 3.0000000000001354, 241.99999999999446, 180.71730153877178, 2.0, 70.0] 
    config_05052023_v6 = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 42.272041375581644, 45.68879164565739, 72.18387587325509, 8.0, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546] 
    config_05052023_v7 = [70.0, 170.0, 0.0, 376.3902506395889, 50.0, 183.39754561299708, 292.72978959756415, 97.48241414984996, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.24999999999998, 37.859873334644796, 8.0, 85.42037999606558, 2.0, 30.650227461964874, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 79.20964447082264, 38.01988292208414, 8.000000000000085, 8.000000000000002, 69.99999999999997, 4.875507082481839, 28.015432914039888, 100.0, 8.00000000000002, 189.10961028748505, 2.000000000000024, 2.0000000000000315, 99.8841650660455, 24.200750804269823, 116.17875257850271, 203.722055474295, 69.99999999999999, 32.70307633998513] 
    config_05052023_v8 = [70.0, 170.0, 0.0, 309.38296961545626, 94.95830972105306, 166.8082001546308, 333.46867682763207, 95.38184368122768, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 45.74968505556718, 46.10466599404622, 8.0, 60.68600201786133, 16.00125977773132, 2.0, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 12.287238981286016, 44.88748281429583, 8.0, 240.1547709755534, 2.0, 13.782279021864408, 3.0, 100.0, 242.0, 8.0, 2.0, 2.0, 75.94187095948752, 3.0000000000000013, 242.0, 188.4836348070854, 2.000000000000054, 70.0]
    config_05052023_v9 = [70.0, 170.0, 0.0, 374.64047283767474, 150.0, 126.91976637415871, 204.35448144891274, 144.08527933925376, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25000000000002, 22.824122228388813, 51.24999999999997, 88.30128319583775, 2.0000000000000235, 29.85712101329059, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 90.94610009548109, 34.61389155214732, 8.0, 241.724183693889, 35.21180898760217, 3.1303802945232384, 100.0, 100.0, 8.000000000000492, 8.0, 2.0, 40.29617711424133, 100.0, 9.129154959949762, 93.78638500182171, 191.5627600247663, 2.0000000000002394, 55.429200274175074] 
    config_05052023_v10 = [70.0, 170.0, 0.0, 399.7704548939183, 74.50923559233944, 249.27960983023132, 161.66228598162223, 114.77841370188877, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 49.25000000000008, 38.26606003074756, 8.00000000000008, 8.000000000000092, 2.0000000000002873, 2.517953573022807, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 49.97084569389409, 61.485742503128904, 8.00000000000017, 8.000000000000117, 2.000000000000129, 44.87411804253946, 3.0000000000000155, 99.99999999999993, 241.9999999999999, 241.99999999999986, 2.0, 2.0000000000000093, 3.000000000000004, 42.415472877172846, 241.99999999999997, 241.99999999999974, 51.606738054647685, 2.099747520965133] 
    config_05052023_v11 = [70.0, 170.0, 0.0, 256.8495208143371, 97.0404220169114, 295.70995425367903, 300.40010291507235, 50.000000000000036, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 47.33076086983445, 22.811879860527206, 8.0, 130.5643604184183, 9.676956520662081, 24.691120244814094, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 3.0000000000000027, 12.201985458541504, 241.99999999999955, 242.0, 63.36574378250602, 70.0, 100.0, 7.591546672617731, 166.4149016757957, 241.9999999999964, 2.0000000000000067, 2.0, 100.0, 12.815506274321598, 8.000000000000147, 159.22158758108304, 2.0, 2.0] 
    config_05052023_v12 = [70.0, 170.0, 0.0, 335.14669984233296, 120.8440821487431, 175.5130108332408, 167.37450464642507, 201.12170252925813, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 41.83012252475036, 45.39417643719114, 73.50963242574893, 8.0, 25.37151866037584, 17.423294251235397, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 20.61049842309486, 47.1073636651051, 8.0, 113.50014454059746, 23.875228631271167, 24.484566451448064, 3.0000000000000897, 100.0, 241.99999999999994, 241.99999999999997, 2.0, 22.86212980308757, 3.000000000000009, 99.99999999999999, 8.000000000000643, 147.06283566489435, 36.479866478070385, 2.000000000000066] 
    config_05052023_v13 =[70.0, 170.0, 0.0, 400.0, 58.50047808778508, 268.07773175515285, 223.42179015706208, 50.0, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 37.48112320256846, 37.23097128140468, 8.000000000000002, 8.000000000000002, 48.693126179795186, 2.0, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.944346966651388, 73.46822442057405, 8.0, 242.0, 11.78945618008921, 41.566017652245364, 100.0, 100.0, 242.0, 242.0, 2.0, 2.0, 21.548833960666713, 100.0, 126.05670877343681, 96.24457250175853, 2.0, 70.0]
    
    
    config_01052023 = {f"config_01052023_v{i}": eval(f"config_01052023_v{i}") for i in range(1,12)}
    config_05052023 = {f"config_05052023_v{i}": eval(f"config_05052023_v{i}") for i in range(1,14)}
    # for config in config_01052023:
    #     generate_geo(f"{config}.root", config_01052023[config]) 
    # print(convert_shield(config_05052023_v6))
    # for config in config_05052023:
    #     generate_geo(f"{config}.root", config_05052023[config])
        # plot_shield_from_verts(plot_arrays_from_params(config_05052023[config], is_sc=True))
    # generate_geo("config_01052023_v1.root", config_01052023_v1)
    # generate_geo("config_01052023_v2.root", config_01052023_v2)
    # custom_shield("config_04032023_narrow.root", config_04032023)
    # config_05052023_v6 = np.array([70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 42.272041375581644, 45.68879164565739, 72.18387587325509, 8.0, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546])
    # config_05052023_v8 = np.array([70.0, 170.0, 0.0, 309.38296961545626, 94.95830972105306, 166.8082001546308, 333.46867682763207, 95.38184368122768, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 45.74968505556718, 46.10466599404622, 8.0, 60.68600201786133, 16.00125977773132, 2.0, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 12.287238981286016, 44.88748281429583, 8.0, 240.1547709755534, 2.0, 13.782279021864408, 3.0, 100.0, 242.0, 8.0, 2.0, 2.0, 75.94187095948752, 3.0000000000000013, 242.0, 188.4836348070854, 2.000000000000054, 70.0])

    # delta_vector = config_05052023_v8 - config_05052023_v6
    # delta = delta_vector/10.
    # config_v6_v8 = {f"config_22052023_v6-v8_{i}": list(config_05052023_v6 + i*delta) for i in range(0,11)}
    # for config in config_v6_v8:
    #     generate_geo(f"{config}.root", config_v6_v8[config])

    config_05052023_v6 = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 42.272041375581644, 45.68879164565739, 72.18387587325509, 8.0, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546]

    
    # config_05052023_v6_scan = {}
    # for conf in range(len(config_05052023_v6)):
    #     if conf != 2 and conf < len(config_05052023_v6) - 1:
    #         config_05052023_v6_scan[f"config_05052023_v6_scan_{conf}_0"] = config_05052023_v6[:conf] + [config_05052023_v6[conf] + 0.05*config_05052023_v6[conf]] + config_05052023_v6[conf+1:]
    #         config_05052023_v6_scan[f"config_05052023_v6_scan_{conf}_1"] = config_05052023_v6[:conf] + [config_05052023_v6[conf] - 0.05*config_05052023_v6[conf]] + config_05052023_v6[conf+1:]
    #     elif conf == len(config_05052023_v6) - 1:
    #         config_05052023_v6_scan[f"config_05052023_v6_scan_{conf}_0"] = config_05052023_v6[:conf] + [config_05052023_v6[conf] + 0.05*config_05052023_v6[conf]]
    #         config_05052023_v6_scan[f"config_05052023_v6_scan_{conf}_1"] = config_05052023_v6[:conf] + [config_05052023_v6[conf] - 0.05*config_05052023_v6[conf]]

    # print(len(config_05052023_v6_scan))
    # for config in config_05052023_v6_scan:
    #     break
        # print(len(config_05052023_v6_scan[config]))
        # for i, elem in enumerate(config_05052023_v6_scan[config]):
        #     if elem < 0:
        #         print(i, "CHECK!!!")
        # generate_geo(f"{config}.root", config_05052023_v6_scan[config])
    config_v6_low_25 = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 42.272041375581644, 45.68879164565739, 47.18387587325509, 8.0, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546]
    config_v6_low_50 = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 42.272041375581644, 45.68879164565739, 22.18387587325509, 8.0, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546]
    config_v6_paral = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 45.68879164565739, 45.68879164565739, 22.18387587325509, 22.18387587325509, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 242.0, 242.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546]
    config_v6_paral_warm_reduced = [70.0, 170.0, 0.0, 353.0780575329521, 125.08255586355432, 184.8344375295139, 150.19262843951793, 186.81232063446174, 40.0, 40.0, 150.0, 150.0, 2.0, 2.0, 80.0, 80.0, 150.0, 150.0, 2.0, 2.0, 72.0, 51.0, 29.0, 46.0, 10.0, 7.0, 45.68879164565739, 45.68879164565739, 22.18387587325509, 22.18387587325509, 27.006281622278333, 16.244833417370145, 10.0, 31.0, 35.0, 31.0, 51.0, 11.0, 24.79612428119684, 48.76386379332487, 8.000000000000052, 104.73165886004907, 15.799123331055451, 16.779328771191132, 3.000000000000501, 100.0, 192.0, 192.0, 2.0000000000000475, 4.800402845273522, 3.0000000000001097, 100.0, 8.0, 172.7285434564396, 46.82853656724763, 2.0000000000006546]
    config_v6_low_dict = {"config_v6_low_25": config_v6_low_25, "config_v6_low_50": config_v6_low_50, "config_v6_paral": config_v6_paral, "config_v6_paral_warm_reduced": config_v6_paral_warm_reduced}
    print(config_v6_low_25 == config_v6_low_50, config_v6_paral == config_v6_low_50, config_v6_paral == config_v6_paral_warm_reduced)
    for config in config_v6_low_dict:
        generate_geo(f"{config}.root", config_v6_low_dict[config])